version: "3.3"

networks:
  app-tier:
    driver: bridge

services:
  server:
    container_name: server
    depends_on:
      - server-db
    build:
      context: ./server
      dockerfile: Dockerfile
    networks:
      - app-tier
    volumes:
      - ./server/src:/home/node/server/src
      - ./server/logs:/home/node/server/logs
      - ./server/tests:/home/node/server/tests
      - ./server/nodemon.json:/home/node/server/nodemon.json
      - ./server/package.json:/home/node/server/package.json
      - ./server/ormconfig.ts:/home/node/server/ormconfig.ts
      - ./server/tsconfig.json:/home/node/server/tsconfig.json
      - ./server/node_modules:/home/node/server/node_modules
    expose:
      - "8000"
    ports:
      - "8000:8000"
    command: yarn dev

  storage:
    container_name: storage
    depends_on:
      - storage-db
    build:
      context: ./storage
      dockerfile: Dockerfile
    networks:
      - app-tier
    expose:
      - "8000"
    ports:
      - "7800:8000"
    command: yarn dev

  server-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "server_db"
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - "8201:3306"
    networks:
      - app-tier

  storage-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "storage_db"

    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - "8202:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8300:80"
    volumes:
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    networks:
      - app-tier

volumes:
  my-db:
